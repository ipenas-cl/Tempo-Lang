#!/bin/bash
# Tempo Compiler
# Copyright (c) 2025 Ignacio Pe√±a Sep√∫lveda

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
ROOT_DIR="$(dirname "$SCRIPT_DIR")"

# Detect OS and select compiler
case "$(uname)" in
    Darwin)
        COMPILER="$ROOT_DIR/compiler/platforms/macos/tempo-compiler"
        ;;
    Linux)
        COMPILER="$ROOT_DIR/compiler/platforms/linux/tempo-compiler"
        ;;
    MINGW*|CYGWIN*|MSYS*)
        COMPILER="$ROOT_DIR/compiler/platforms/windows/tempo-compiler.exe"
        ;;
    *)
        echo "‚ùå Sistema operativo no soportado"
        exit 1
        ;;
esac

# Check if compiler exists
if [ ! -f "$COMPILER" ]; then
    echo "‚ùå Tempo compiler not found at: $COMPILER"
    exit 1
fi

# Show help if no arguments
if [ $# -eq 0 ]; then
    echo "Tempo Programming Language"
    echo ""
    echo "Usage:"
    echo "  tempo <file.tempo>    Compile a Tempo program"
    echo "  tempo monitor         Launch Tempo observability dashboard"
    echo "  tempo debug <app>     Debug a running Tempo application"
    echo "  tempo logs <app>      Show logs for a Tempo application"
    echo "  tempo profile <app>   Generate performance profile for PGO"
    echo "  tempo alert <msg>     Send alert to SRE team"
    echo "  tempo --version       Show version"
    echo "  tempo --help          Show this help"
    echo ""
    echo "Examples:"
    echo "  tempo hello.tempo     # Compiles to 'tempo.app'"
    echo "  ./tempo.app           # Run the compiled program"
    echo "  tempo monitor         # Launch observability dashboard"
    echo "  tempo debug tempo.app # Debug running application"
    echo "  tempo profile tempo.app # Generate PGO data for optimization"
    echo ""
    exit 0
fi

# Handle commands and flags
case "$1" in
    monitor)
        echo "üîç Launching Tempo Observability Monitor..."
        exec "$ROOT_DIR/tools/monitor/tempo-monitor"
        ;;
    debug)
        if [ $# -lt 2 ]; then
            echo "‚ùå Usage: tempo debug <app_name>"
            exit 1
        fi
        echo "üêõ Debugging Tempo app: $2"
        exec "$ROOT_DIR/tools/monitor/tempo-debug" "$2"
        ;;
    logs)
        if [ $# -lt 2 ]; then
            echo "‚ùå Usage: tempo logs <app_name>"
            exit 1
        fi
        echo "üìã Showing logs for: $2"
        exec "$ROOT_DIR/tools/monitor/tempo-logs" "$2"
        ;;
    profile)
        if [ $# -lt 2 ]; then
            echo "‚ùå Usage: tempo profile <app_name>"
            exit 1
        fi
        echo "üî¨ Profiling application: $2"
        exec "$ROOT_DIR/tools/monitor/tempo-profile" "$2"
        ;;
    alert)
        if [ $# -lt 2 ]; then
            echo "‚ùå Usage: tempo alert <message>"
            exit 1
        fi
        shift # Remove 'alert' from arguments
        echo "üö® Sending alert to SRE: $*"
        exec "$ROOT_DIR/tools/monitor/tempo-alert" "$*"
        ;;
    --help|-h)
        $0
        exit 0
        ;;
    --version|-v)
        echo "Tempo 0.0.1 - Deterministic Programming Language"
        echo "Built with zero C dependencies"
        exit 0
        ;;
    -*)
        echo "Unknown option: $1"
        echo "Use 'tempo --help' for usage information"
        exit 1
        ;;
esac

# Check if input file exists
if [ ! -f "$1" ]; then
    echo "‚ùå File not found: $1"
    exit 1
fi

# Check if it's a .tempo file
if [[ "$1" != *.tempo ]]; then
    echo "‚ùå File must have .tempo extension"
    exit 1
fi

# Change to the directory where the source file is located
# This ensures relative paths work correctly
SOURCE_DIR="$(dirname "$1")"
SOURCE_FILE="$(basename "$1")"

if [ "$SOURCE_DIR" != "." ]; then
    cd "$SOURCE_DIR"
fi

# Compile
echo "üî• Compiling $1..."
"$COMPILER" "$SOURCE_FILE"

if [ $? -eq 0 ]; then
    echo "‚úÖ Compilation successful!"
    echo "   Run with: ./$SOURCE_FILE.app"
else
    echo "‚ùå Compilation failed"
    exit 1
fi