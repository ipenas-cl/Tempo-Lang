#!/bin/bash
# ===========================================================================
# TEMPO BUILD SYSTEM
# ===========================================================================
# Professional build system for Tempo programming language
# Copyright (c) 2025 Ignacio Pe√±a Sep√∫lveda
# ===========================================================================

set -e

echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë üõ°Ô∏è  ‚ïë ‚öñÔ∏è  ‚ïë ‚ö°  ‚ïë  Tempo Build System"
echo "‚ïë  C  ‚ïë  E  ‚ïë  G  ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ï©‚ïê‚ïê‚ïê‚ïê‚ïê‚ï©‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo ""

# Detect platform
if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    PLATFORM="linux"
    echo "üêß Building for Linux"
elif [[ "$OSTYPE" == "darwin"* ]]; then
    PLATFORM="macos"
    echo "üçé Building for macOS"
else
    echo "‚ùå Unsupported platform: $OSTYPE"
    echo "Supported platforms: Linux, macOS"
    exit 1
fi

# Check required tools
echo ""
echo "Checking build requirements..."

if ! command -v nasm &> /dev/null; then
    echo "‚ùå NASM not found. Please install:"
    if [[ "$PLATFORM" == "linux" ]]; then
        echo "   sudo apt-get install nasm"
    else
        echo "   brew install nasm"
    fi
    exit 1
fi
echo "‚úÖ NASM found"

# Create bin directory if it doesn't exist
mkdir -p bin

# Build the compiler
echo ""
echo "üî® Building Tempo compiler..."
cd "internal/compiler/$PLATFORM"

if ./build.sh; then
    echo "‚úÖ Compiler built successfully"
else
    echo "‚ùå Compiler build failed"
    exit 1
fi

# Copy compiler to bin directory
cd ../../..
cp "internal/compiler/$PLATFORM/tempo-bootstrap" "bin/tempo-compiler"

echo ""
echo "üéâ Build complete!"
echo ""
echo "Next steps:"
echo "  bin/tempo hello.ch    # Compile the example"
echo "  ./stage1                 # Run your program"
echo ""
echo "Use 'bin/tempo --help' for more options"