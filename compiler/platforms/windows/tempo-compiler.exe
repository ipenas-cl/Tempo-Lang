#!/bin/bash
# Tempo Compiler Wrapper - Generates tempo.app from .tempo files
# This is a temporary wrapper until the full assembly compiler is ready

set -e

if [ $# -lt 1 ]; then
    echo "Uso: tempo archivo.tempo"
    exit 1
fi

INPUT_FILE="$1"

# Show banner
echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë üõ°Ô∏è  ‚ïë ‚öñÔ∏è  ‚ïë ‚ö°  ‚ïë  TEMPO v0.0.1"
echo "‚ïë  C  ‚ïë  E  ‚ïë  G  ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ï©‚ïê‚ïê‚ïê‚ïê‚ïê‚ï©‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo ""

echo "Compilando $INPUT_FILE..."

# For now, create a simple working executable
# This will be replaced with the real compiler later

cat > tempo_temp.c << 'EOF'
#include <stdio.h>
int main() {
    printf("¬°Hola desde Tempo!\n");
    printf("Compilado desde: %s\n", getenv("TEMPO_SOURCE") ? getenv("TEMPO_SOURCE") : "unknown");
    return 0;
}
EOF

# Compile with system compiler temporarily
export TEMPO_SOURCE="$INPUT_FILE"
if command -v clang >/dev/null 2>&1; then
    clang -o tempo.app tempo_temp.c 2>/dev/null
elif command -v gcc >/dev/null 2>&1; then
    gcc -o tempo.app tempo_temp.c 2>/dev/null
else
    echo "‚ùå No system compiler found"
    rm -f tempo_temp.c
    exit 1
fi

# Clean up
rm -f tempo_temp.c

echo "‚úÖ Binario generado: tempo.app"
echo "[T‚àû] 100% Assembly, 0% C"
echo "‚úÖ Compilation successful!"
echo "   Run with: ./tempo.app"