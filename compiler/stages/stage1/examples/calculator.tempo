// ╔═════╦═════╦═════╗
// ║ 🛡️  ║ ⚖️  ║ ⚡  ║
// ║  C  ║  E  ║  G  ║
// ╚═════╩═════╩═════╝
// ╔═════════════════╗
// ║ wcet [T∞] bound ║
// ╚═════════════════╝
//
// Author: Ignacio Peña Sepúlveda
// Date: June 25, 2025

// calculator.tempo - Calculadora simple

function add(a: i32, b: i32) -> i32 {
    return a + b;
}

function subtract(a: i32, b: i32) -> i32 {
    return a - b;
}

function multiply(a: i32, b: i32) -> i32 {
    return a * b;
}

function divide(a: i32, b: i32) -> i32 {
    if (b == 0) {
        print("Error: Division by zero!");
        return 0;
    }
    return a / b;
}

function factorial(n: i32) -> i32 {
    if (n <= 1) {
        return 1;
    } else {
        return n * factorial(n - 1);
    }
}

function power(base: i32, exp: i32) -> i32 {
    let result = 1;
    let i = 0;
    while (i < exp) {
        result = result * base;
        i = i + 1;
    }
    return result;
}

function main() {
    print("=== Tempo Calculator ===");
    
    // Pruebas básicas
    let x = 10;
    let y = 3;
    
    print("x = ");
    print_number(x);
    print("y = ");
    print_number(y);
    
    print("x + y = ");
    print_number(add(x, y));
    
    print("x - y = ");
    print_number(subtract(x, y));
    
    print("x * y = ");
    print_number(multiply(x, y));
    
    print("x / y = ");
    print_number(divide(x, y));
    
    print("x! = ");
    print_number(factorial(x));
    
    print("x^y = ");
    print_number(power(x, y));
    
    // Expresiones más complejas
    let complex = (x + y) * (x - y);
    print("(x + y) * (x - y) = ");
    print_number(complex);
}